From: Matt Caswell <matt@openssl.org>
Date: Mon, 23 Aug 2021 13:56:22 +0100
Subject: fixup! Allow fuzz builds to detect string overruns

---
 crypto/asn1/asn1_lib.c | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

Index: openssl-1.1.0l/crypto/asn1/asn1_lib.c
===================================================================
--- openssl-1.1.0l.orig/crypto/asn1/asn1_lib.c	2021-09-26 00:23:55.152053878 +0200
+++ openssl-1.1.0l/crypto/asn1/asn1_lib.c	2021-09-26 00:23:55.148053879 +0200
@@ -285,7 +285,12 @@
     }
     if ((size_t)str->length <= len || str->data == NULL) {
         c = str->data;
+#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
+        /* No NUL terminator in fuzzing builds */
+        str->data = OPENSSL_realloc(c, len);
+#else
         str->data = OPENSSL_realloc(c, len + 1);
+#endif
         if (str->data == NULL) {
             ASN1err(ASN1_F_ASN1_STRING_SET, ERR_R_MALLOC_FAILURE);
             str->data = c;
@@ -295,15 +300,11 @@
     str->length = len;
     if (data != NULL) {
         memcpy(str->data, data, len);
-        /* an allowance for strings :-) */
-#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
+#ifndef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
         /*
-         * Arbitrary byte on the end, which should never be read if the string
-         * length is being properly respected.
+         * Add a NUL terminator. This should not be necessary - but we add it as
+         * a safety precaution
          */
-        str->data[len] = 'x';
-#else
-        /* This should not be necessary - but we add it as a safety precaution */
         str->data[len] = '\0';
 #endif
     }
