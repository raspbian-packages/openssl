From: Matt Caswell <matt@openssl.org>
Date: Wed, 18 Aug 2021 12:24:22 +0100
Subject: Fix i2v_GENERAL_NAME to not assume NUL terminated strings

ASN.1 strings may not be NUL terminated. Don't assume they are.
---
 crypto/include/internal/x509_int.h |  5 +++++
 crypto/x509v3/v3_alt.c             | 10 +++++++---
 crypto/x509v3/v3_utl.c             | 35 +++++++++++++++++++++++++++++------
 3 files changed, 41 insertions(+), 9 deletions(-)

Index: openssl-1.1.0l/crypto/include/internal/x509_int.h
===================================================================
--- openssl-1.1.0l.orig/crypto/include/internal/x509_int.h	2021-09-26 00:08:21.596392224 +0200
+++ openssl-1.1.0l/crypto/include/internal/x509_int.h	2021-09-26 00:09:47.044360023 +0200
@@ -7,6 +7,9 @@
  * https://www.openssl.org/source/license.html
  */
 
+#include <openssl/x509.h>
+#include <openssl/conf.h>
+
 /* Internal X509 structures and functions: not for application use */
 
 /* Note: unless otherwise stated a field pointer is mandatory and should
@@ -266,3 +269,6 @@
 
 int a2i_ipadd(unsigned char *ipout, const char *ipasc);
 int x509_set1_time(ASN1_TIME **ptm, const ASN1_TIME *tm);
+
+int x509v3_add_len_value_uchar(const char *name, const unsigned char *value,
+                              size_t vallen, STACK_OF(CONF_VALUE) **extlist);
Index: openssl-1.1.0l/crypto/x509v3/v3_alt.c
===================================================================
--- openssl-1.1.0l.orig/crypto/x509v3/v3_alt.c	2021-09-26 00:08:21.596392224 +0200
+++ openssl-1.1.0l/crypto/x509v3/v3_alt.c	2021-09-26 00:08:21.592392225 +0200
@@ -9,6 +9,7 @@
 
 #include <stdio.h>
 #include "internal/cryptlib.h"
+#include "internal/x509_int.h"
 #include <openssl/conf.h>
 #include <openssl/x509v3.h>
 #include "ext_dat.h"
@@ -85,17 +86,20 @@
         break;
 
     case GEN_EMAIL:
-        if (!X509V3_add_value_uchar("email", gen->d.ia5->data, &ret))
+        if (!x509v3_add_len_value_uchar("email", gen->d.ia5->data,
+                                        gen->d.ia5->length, &ret))
             return NULL;
         break;
 
     case GEN_DNS:
-        if (!X509V3_add_value_uchar("DNS", gen->d.ia5->data, &ret))
+        if (!x509v3_add_len_value_uchar("DNS", gen->d.ia5->data,
+                                        gen->d.ia5->length, &ret))
             return NULL;
         break;
 
     case GEN_URI:
-        if (!X509V3_add_value_uchar("URI", gen->d.ia5->data, &ret))
+        if (!x509v3_add_len_value_uchar("URI", gen->d.ia5->data,
+                                        gen->d.ia5->length, &ret))
             return NULL;
         break;
 
Index: openssl-1.1.0l/crypto/x509v3/v3_utl.c
===================================================================
--- openssl-1.1.0l.orig/crypto/x509v3/v3_utl.c	2021-09-26 00:08:21.596392224 +0200
+++ openssl-1.1.0l/crypto/x509v3/v3_utl.c	2021-09-26 00:10:21.992346924 +0200
@@ -10,6 +10,7 @@
 /* X509 v3 extension utilities */
 
 #include <stdio.h>
+#include <string.h>
 #include <ctype.h>
 #include "internal/cryptlib.h"
 #include <openssl/conf.h>
@@ -33,17 +34,23 @@
 
 /* Add a CONF_VALUE name value pair to stack */
 
-int X509V3_add_value(const char *name, const char *value,
-                     STACK_OF(CONF_VALUE) **extlist)
+static int x509v3_add_len_value(const char *name, const char *value,
+                                size_t vallen, STACK_OF(CONF_VALUE) **extlist)
 {
     CONF_VALUE *vtmp = NULL;
     char *tname = NULL, *tvalue = NULL;
     int sk_allocated = (*extlist == NULL);
 
-    if (name && (tname = OPENSSL_strdup(name)) == NULL)
-        goto err;
-    if (value && (tvalue = OPENSSL_strdup(value)) == NULL)
+    if (name != NULL && (tname = OPENSSL_strdup(name)) == NULL)
         goto err;
+    if (value != NULL) {
+        /* We don't allow embeded NUL characters */
+        if (memchr(value, 0, vallen) != NULL)
+            goto err;
+        tvalue = OPENSSL_strndup(value, vallen);
+        if (tvalue == NULL)
+            goto err;
+    }
     if ((vtmp = OPENSSL_malloc(sizeof(*vtmp))) == NULL)
         goto err;
     if (sk_allocated && (*extlist = sk_CONF_VALUE_new_null()) == NULL)
@@ -66,10 +73,26 @@
     return 0;
 }
 
+int X509V3_add_value(const char *name, const char *value,
+                     STACK_OF(CONF_VALUE) **extlist)
+{
+    return x509v3_add_len_value(name, value,
+                                value != NULL ? strlen((const char *)value) : 0,
+                                extlist);
+}
+
 int X509V3_add_value_uchar(const char *name, const unsigned char *value,
                            STACK_OF(CONF_VALUE) **extlist)
 {
-    return X509V3_add_value(name, (const char *)value, extlist);
+    return x509v3_add_len_value(name, (const char *)value,
+                                value != NULL ? strlen((const char *)value) : 0,
+                                extlist);
+}
+
+int x509v3_add_len_value_uchar(const char *name, const unsigned char *value,
+                               size_t vallen, STACK_OF(CONF_VALUE) **extlist)
+{
+    return x509v3_add_len_value(name, (const char *)value, vallen, extlist);
 }
 
 /* Free function for STACK_OF(CONF_VALUE) */
